{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arman\\\\Desktop\\\\arman\\\\my folder\\\\React-task\\\\task-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [input, setInput] = useState('');\n  const addTask = () => {\n    if (input.trim() === '') return;\n    const newTask = {\n      id: Date.now(),\n      text: input.trim(),\n      completed: false\n    };\n    setTasks([...tasks, newTask]);\n    setInput('');\n  };\n  const toggleComplete = id => {\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      completed: !task.completed\n    } : task));\n  };\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a new task\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: e => {\n          if (e.key === 'Enter') addTask();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTask,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"task-list\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: task.completed ? 'completed' : '',\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => toggleComplete(task.id),\n          children: task.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-btn\",\n          onClick: () => deleteTask(task.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5VQAGH0vF1/URdothgGn9vQR4oU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","input","setInput","addTask","trim","newTask","id","Date","now","text","completed","toggleComplete","map","task","deleteTask","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onKeyDown","key","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Arman/Desktop/arman/my folder/React-task/task-app/src/App.js"],"sourcesContent":["import { useState } from 'react';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [input, setInput] = useState('');\r\n\r\n  const addTask = () => {\r\n    if (input.trim() === '') return;\r\n    const newTask = {\r\n      id: Date.now(),\r\n      text: input.trim(),\r\n      completed: false,\r\n    };\r\n    setTasks([...tasks, newTask]);\r\n    setInput('');\r\n  };\r\n\r\n  const toggleComplete = (id) => {\r\n    setTasks(\r\n      tasks.map((task) =>\r\n        task.id === id ? {...task, completed: !task.completed} : task\r\n      )\r\n    );\r\n  };\r\n\r\n  const deleteTask = (id) => {\r\n    setTasks(tasks.filter((task) => task.id !== id));\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <h1>Task Manager</h1>\r\n      <div className=\"input-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add a new task\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyDown={(e) => { if (e.key === 'Enter') addTask(); }}\r\n        />\r\n        <button onClick={addTask}>Add</button>\r\n      </div>\r\n      <ul className=\"task-list\">\r\n        {tasks.map((task) => (\r\n          <li key={task.id} className={task.completed ? 'completed' : ''}>\r\n            <span onClick={() => toggleComplete(task.id)}>{task.text}</span>\r\n            <button className=\"delete-btn\" onClick={() => deleteTask(task.id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}